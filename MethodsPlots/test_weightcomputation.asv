close all;
clear all;

tic % 8560 seconds

rng(1)

figure(1), clf;

set(gca,'fontsize',20)

Nobservations = 10000;
Nsubjects = 10;
Nrepeats = 10; % Averaging For the plot

for noise = 0.05:0.5:10
    data = zeros(4,Nrepeats);
    for repeat = 1:Nrepeats
        X = randn(Nsubjects, Nobservations); 

        M = randn(Nsubjects,Nsubjects);

        Y = M*X + noise*randn(Nsubjects, Nobservations); % Datasets so that X and Y are correlated + corrupted by noise

        C_xy = X*Y';
        C_xx = X*X';
        C_yy = Y*Y';
        
        S = randn(Nsubjects, Nobservations);  % Same brain areas in different experiment. Just noise
        T = (0.25.*randn(Nsubjects,Nsubjects) + 0.75.*M) * S;

        D_xy = S*T';
        
        [r_wx, r_wy, r_lam, wxcxywy, wxdxywy, wxcxxwx, wycyywy] = compute_weights_full(C_xx, C_yy, C_xy, D_xy);
        w_x = r_wx(:,1); % This is the best weight vector
        w_y = r_wy(:,1);

        data(1, repeat) = (w_x'*C_xy*w_y).^2;
        data(2, repeat) = (w_x'*D_xy*w_y).^2;

        [r_wx, r_wy, r_lam, wxcxywy, wxdxywy, wxcxxwx, wycyywy] = compute_weights_full(C_xx, C_yy, C_xy, 0*D_xy);
        w_x = r_wx(:,1);
        w_y = r_wy(:,1);
        data(3, repeat) = (w_x'*C_xy*w_y).^2;
        data(4, repeat) = (w_x'*D_xy*w_y).^2;
    end

    figure(1)

    subplot(1,3,1), hold on;
    mu = mean(data(1,:));
    err = std(data(1,:)) / sqrt(Nrepeats);
    errorbar(noise, mu, err, 'o', 'MarkerFaceColor', "#0072BD", 'Color',"#0072BD") % CRM result for best corr (max)
    mu = mean(data(3,:));
    err = std(data(3,:)) / sqrt(Nrepeats);
    errorbar(noise, mu, err, 'o', 'MarkerFaceColor', "#77AC30", 'Color',"#77AC30") % CCA zero for best corr

    subplot(1,3,2), hold on;
    mu = mean(data(2,:));
    err = std(data(2,:)) / sqrt(Nrepeats);
    errorbar(noise, mu, err, 'o', 'MarkerFaceColor', "#0072BD", 'Color',"#0072BD") % CRM result for D (=0)
    mu = mean(data(4,:));
    err = std(data(4,:)) / sqrt(Nrepeats);
    errorbar(noise, mu, err, 'o', 'MarkerFaceColor', "#77AC30", 'Color',"#77AC30") % CCA result for D (not constrained)
end

%%
subplot(1,3,1)
ylim([-0.1,1.1])
xlim([-0.1, 10.1])
xlabel("Noise \alpha")
ylabel("w_xC_{xy}w_y")
set(gca, 'tickdir','out');
legend('CRM', 'CCA', 'Location','northeast')

subplot(1,3,2)
ylim([-0.1,0.7])
xlim([-0.1, 10.1])
xlabel("Noise")
ylabel("w_xD_{xy}w_y")
set(gca, 'tickdir','out');
legend('CRM', 'CCA', 'Location','northeast')

[r_wx, r_wy, r_lam, wxcxywy, wxdxywy, wxcxxwx, wycyywy] = compute_weights_full(C_xx, C_yy, C_xy, D_xy);

%%
for lbd3 = (min(r_lam)-1): 0.01: (max(r_lam)+1)
    M = inv(C_xx)*(C_xy+lbd3*D_xy)*inv(C_yy)* ((C_xy+lbd3*D_xy)');
    [W,eigvalues] = eig(M, 'vector');

    constraint = zeros(Nsubjects,1);    
    correlation = zeros(Nsubjects,1);

    for i = 1:Nsubjects
        w_x = W(:,i);
        w_x = w_x./sqrt(w_x'*C_xx*w_x);
        w_y = inv(C_yy)*(C_xy+lbd3*D_xy)'*w_x ./ sqrt(eigvalues(i));
        constraint(i) = w_x'*D_xy*w_y;
        correlation(i) = w_x'*C_xy*w_y;
    end
    
    subplot(1,3,3)
    scatter(lbd3*ones(Nsubjects,1), constraint, 10, correlation, "filled")
    hold on;
end

%Check the roots
subplot(1,3,3)
plot(r_lam, 0, 'o', 'MarkerFaceColor', 'r', 'MarkerEdgeColor','r')
plot([min(r_lam)-1,max(r_lam)+1], [0,0], 'k--')
xlabel("\lambda_3")
ylabel("w_xD_{xy}w_y")
a=colorbar;
a.Label.String = 'w_xC_{xy}w_y';
caxis([-1,1])
xlim([ min(r_lam)-1, max(r_lam)+1])

subplot(1,3,3)
set(gca,'fontsize',18)
text(-15.3,0.41, "A", 'FontSize', 22)
text(-9.8,0.41, "B", 'FontSize', 22)
text(-3.9,0.41, "C", 'FontSize', 22)

subplot(1,3,1)
set(gca,'fontsize',1)
subplot(1,3,2)
set(gca,'fontsize',18)

set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .7, 0.3]);

%exportgraphics(figure(1), 'simulation1.pdf');

toc